# -*- coding: utf-8 -*-
import base64
import json
import os

from PyQt5.QtWidgets import QMessageBox, QWidget

# Form implementation generated from reading ui file 'send_mail.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from crypt import Tree
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QCursor
from received_window import Ui_Form_received_mail

class Ui_MainWindow_sendmail(object):

    def __init__(self, sender):
        self.sender = sender

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(792, 557)
        MainWindow.setMinimumSize(QtCore.QSize(792, 557))
        MainWindow.setMaximumSize(QtCore.QSize(792, 557))
        MainWindow.setStyleSheet("background: #6ED0F6;\n"
"  color: #fff;\n"
"  font-family: \'Raleway\', sans-serif;\n"
"  -webkit-font-smoothing: antialiased;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit_email_recipient = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_email_recipient.setGeometry(QtCore.QRect(90, 60, 261, 51))
        self.lineEdit_email_recipient.setStyleSheet("background: #fff;\n"
"color: rgb(0, 0, 0);\n"
"  border: none;\n"
"  border-radius: 8px;\n"
"  font-size: 27px;\n"
"  font-family: \'Raleway\', sans-serif;\n"
"  height: 72px;\n"
"  width: 99.5%;\n"
"  margin-bottom: 10px;\n"
"  opacity: 1;\n"
"  text-indent: 20px;\n"
"  transition: all .2s ease-in-out;")
        self.lineEdit_email_recipient.setObjectName("lineEdit_email_recipient")
        self.textEdit_main_text = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_main_text.setGeometry(QtCore.QRect(40, 230, 431, 291))
        self.textEdit_main_text.setStyleSheet("background: #fff;\n"
"color: rgb(0, 0, 0);\n"
"  border: none;\n"
"  border-radius: 8px;\n"
"  font-size: 22px;\n"
"  font-family: \'Raleway\', sans-serif;\n"
"  height: 72px;\n"
"  width: 99.5%;\n"
"  margin-bottom: 10px;\n"
"  opacity: 1;\n"
"  text-indent: 20px;\n"
"  transition: all .2s ease-in-out;")
        self.textEdit_main_text.setObjectName("textEdit_main_text")
        self.label_email_recipient = QtWidgets.QLabel(self.centralwidget)
        self.label_email_recipient.setGeometry(QtCore.QRect(90, 30, 181, 61))
        self.label_email_recipient.setStyleSheet("display: inline-block;\n"
"  font-size: 22px;\n"
"  font-weight: 800;\n"
"  opacity: .5;\n"
"  margin-bottom: 30px;\n"
"")
        self.label_email_recipient.setObjectName("label_email_recipient")
        self.lineEdit_subject = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_subject.setGeometry(QtCore.QRect(120, 180, 181, 51))
        self.lineEdit_subject.setStyleSheet("background: #fff;\n"
"color: rgb(0, 0, 0);\n"
"  border: none;\n"
"  border-radius: 8px;\n"
"  font-size: 25px;\n"
"  font-family: \'Raleway\', sans-serif;\n"
"  height: 72px;\n"
"  width: 99.5%;\n"
"  margin-bottom: 10px;\n"
"  opacity: 1;\n"
"  text-indent: 20px;\n"
"  transition: all .2s ease-in-out;")
        self.lineEdit_subject.setObjectName("lineEdit_subject")
        self.label_subject = QtWidgets.QLabel(self.centralwidget)
        self.label_subject.setGeometry(QtCore.QRect(50, 190, 101, 51))
        self.label_subject.setStyleSheet("display: inline-block;\n"
"  font-size: 15px;\n"
"  font-weight: 800;\n"
"  opacity: .5;\n"
"  margin-bottom: 30px;")
        self.label_subject.setObjectName("label_subject")
        self.pushButton_send_mail = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_send_mail.setGeometry(QtCore.QRect(480, 470, 271, 51))
        self.pushButton_send_mail.setStyleSheet("background: #079BCF;\n"
"  border: none;\n"
"  border-radius: 8px;\n"
"  color: #fff;\n"
"  cursor: pointer;\n"
"  font-family: \'Raleway\', sans-serif;\n"
"  font-size: 27px;\n"
"  height: 72px;\n"
"  width: 100%;\n"
"  margin-bottom: 10px;\n"
"  overflow: hidden;\n"
"  transition: all .3s cubic-bezier(.6,0,.4,1);")
        self.pushButton_send_mail.setObjectName("pushButton_send_mail")
        self.pushButton_send_mail.setCursor(QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_clean = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_clean.setGeometry(QtCore.QRect(530, 430, 171, 41))
        self.pushButton_clean.setCursor(QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_clean.setStyleSheet("background: #079BCF;\n"
"  border: none;\n"
"  border-radius: 8px;\n"
"  color: #fff;\n"
"  cursor: pointer;\n"
"  font-family: \'Raleway\', sans-serif;\n"
"  font-size: 25px;\n"
"  height: 72px;\n"
"  width: 100%;\n"
"  margin-bottom: 10px;\n"
"  overflow: hidden;\n"
"  transition: all .3s cubic-bezier(.6,0,.4,1);")
        self.pushButton_clean.setObjectName("pushButton_clean")

        self.pushButton_received_mail = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_received_mail.setObjectName("pushButton_received_mail")
        self.pushButton_received_mail.setGeometry(QtCore.QRect(480, 60, 271, 51))
        self.pushButton_received_mail.setStyleSheet("background: #079BCF;\n"
                                                "  border: none;\n"
                                                "  border-radius: 8px;\n"
                                                "  color: #fff;\n"
                                                "  cursor: pointer;\n"
                                                "  font-family: \'Raleway\', sans-serif;\n"
                                                "  font-size: 27px;\n"
                                                "  height: 72px;\n"
                                                "  width: 100%;\n"
                                                "  margin-bottom: 10px;\n"
                                                "  overflow: hidden;\n"
                                                "  transition: all .3s cubic-bezier(.6,0,.4,1);")
        self.pushButton_received_mail.setObjectName("pushButton_send_mail")
        self.pushButton_received_mail.setCursor(QCursor(QtCore.Qt.PointingHandCursor))

        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(30, 130, 731, 31))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.textEdit_main_text.raise_()
        self.label_email_recipient.raise_()
        self.label_subject.raise_()
        self.lineEdit_subject.raise_()
        self.pushButton_send_mail.raise_()
        self.pushButton_clean.raise_()
        self.pushButton_received_mail.raise_()
        self.lineEdit_email_recipient.raise_()
        self.line.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.add_functions()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Email"))
        self.label_email_recipient.setText(_translate("MainWindow", "Email to send"))
        self.label_subject.setText(_translate("MainWindow", "Subject"))
        self.pushButton_send_mail.setText(_translate("MainWindow", "Send mail"))
        self.pushButton_clean.setText(_translate("MainWindow", "clean out"))
        self.pushButton_received_mail.setText(_translate("MainWindow", "Letters received"))

    def add_functions(self):
        self.pushButton_clean.clicked.connect(self.clean_lineEdits)
        self.pushButton_send_mail.clicked.connect(self.send_mail)
        self.pushButton_received_mail.clicked.connect(self.open_received_mail_window)

    def decode_this_letter(self, index):
        email_message = self.mails_body_reversed[index][3]
        files = self.sender.get_files(email_message)
        subject = self.this_letter_ui.lineEdit_received_subject.text()
        text = self.mails_body_reversed[index][2].split('{')[0]
        try:
            with open('subject_code.json', 'r') as f:
                s_data = json.load(f)
            subject = Tree.decrypt(subject, s_data)

            with open('text_code.json', 'r') as f:
                t_data = json.load(f)
            text = Tree.decrypt(text, t_data)
            for f in files:
                os.remove(f)
            self.this_letter_ui.lineEdit_received_subject.setText(subject)
            self.this_letter_ui.textBrowser_received_text.setText(text)
        except Exception as e:
            print(e)
            error = QMessageBox()
            error.setWindowTitle("Ошибка")
            error.setText("Это письмо не может быть раскодировано!")
            error.setIcon(QMessageBox.Warning)
            error.exec_()


    def open_this_letter(self):
        button = QtWidgets.QApplication.instance().sender()
        index = int(button.text().split(")")[0]) - 1
        em_from = self.mails_body_reversed[index][0][1]
        subject = self.mails_body_reversed[index][1]
        text = self.mails_body_reversed[index][2].split('{')[0]
        self.Form_received_mail = QtWidgets.QWidget()
        self.this_letter_ui = Ui_Form_received_mail()
        self.this_letter_ui.setupUi(self.Form_received_mail)
        self.this_letter_ui.lineEdit_received_from.setText(em_from)
        self.this_letter_ui.lineEdit_received_subject.setText(subject)
        self.this_letter_ui.textBrowser_received_text.setText(text)
        self.this_letter_ui.pushButton_decode_mail.clicked.connect(lambda: self.decode_this_letter(index))
        self.Form_received_mail.show()

    def open_received_mail_window(self):
        self.layout = QtWidgets.QVBoxLayout()
        self.mails_body = self.sender.letters_received()
        self.mails_body_reversed = self.mails_body[::-1][:5]
        x = 10
        y = 10
        self.open_r_window = QWidget()
        self.open_r_window.setWindowTitle("Received mails")
        self.open_r_window.resize(200, 300)
        self.open_r_window.setStyleSheet("background: #6ED0F6;\n"
                             "  color: #fff;\n"
                             "  font-family: \'Raleway\', sans-serif;\n"
                             "  -webkit-font-smoothing: antialiased;")
        for i, values in enumerate(self.mails_body_reversed):
            button = QtWidgets.QPushButton(f'{i+1}) From: {values[0][1]}\nSubject:{values[1][0:10]}')
            button.move(x, y)
            button.setStyleSheet("background: #079BCF;\n"
                                 "  border: none;\n"
                                 "  border-radius: 16px;\n"
                                 "  color: #fff;\n"
                                 "  cursor: pointer;\n"
                                 "  font-family: \'Raleway\', sans-serif;\n"
                                 "  font-size: 10px;\n"
                                 "  height: 50px;\n"
                                 "  width: 130%;\n"
                                 "  margin-bottom: 10px;\n"
                                 "  overflow: hidden;\n"
                                 "  transition: all .3s cubic-bezier(.6,0,.4,1);")
            button.setCursor(QCursor(QtCore.Qt.PointingHandCursor))
            button.clicked.connect(self.open_this_letter)
            self.layout.addWidget(button)
            y += 70
        self.open_r_window.setLayout(self.layout)
        self.open_r_window.show()

    def clean_lineEdits(self):
        self.lineEdit_subject.clear()
        self.textEdit_main_text.clear()

    def send_mail(self):
        try:
            subject = self.lineEdit_subject.text()
            text = self.textEdit_main_text.toPlainText()
            email_to = self.lineEdit_email_recipient.text()
            self.sender.send_encrypted_email(email_to, subject, text)
            coef_window = QMessageBox()
            coef_window.setWindowTitle("Коэффициент сжатия")
            coef_window.setText(f'Байт после сжатия: {self.sender.bytes_after_compression}\nКоэффициент сжатия: {self.sender.coefficient}')
            coef_window.exec_()
        except Exception as e:
            print(e)
            error = QMessageBox()
            error.setWindowTitle("Ошибка отправки письма")
            error.setText("Неверный email получателя")
            error.setIcon(QMessageBox.Warning)
            error.exec_()
            raise e



if __name__ == "__main__":
    import sys
    from mail import Sender
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow_sendmail(Sender())
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
